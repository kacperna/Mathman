### YamlMime:ManagedReference
items:
- uid: Mathmanbeta.GameBoard
  commentId: T:Mathmanbeta.GameBoard
  id: GameBoard
  parent: Mathmanbeta
  children:
  - Mathmanbeta.GameBoard.CreateBoardImage(System.Windows.Forms.Form)
  - Mathmanbeta.GameBoard.InitialiseBoardMatrix
  - Mathmanbeta.GameBoard.Matrix
  langs:
  - csharp
  - vb
  name: GameBoard
  nameWithType: GameBoard
  fullName: Mathmanbeta.GameBoard
  type: Class
  source:
    remote:
      path: C:/Users/Kacper/source/repos/Mathmanbeta/Mathmanbeta/Classes/GameBoard.cs
    id: GameBoard
    path: Classes/GameBoard.cs
    startLine: 15
  assemblies:
  - Mathmanbeta
  namespace: Mathmanbeta
  summary: "\nKlasa odpowiedzialna za konfigurcje i macierzowy opis planszy gry\n"
  example: []
  syntax:
    content: public class GameBoard
    content.vb: Public Class GameBoard
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mathmanbeta.GameBoard.Matrix
  commentId: F:Mathmanbeta.GameBoard.Matrix
  id: Matrix
  parent: Mathmanbeta.GameBoard
  langs:
  - csharp
  - vb
  name: Matrix
  nameWithType: GameBoard.Matrix
  fullName: Mathmanbeta.GameBoard.Matrix
  type: Field
  source:
    remote:
      path: C:/Users/Kacper/source/repos/Mathmanbeta/Mathmanbeta/Classes/GameBoard.cs
    id: Matrix
    path: Classes/GameBoard.cs
    startLine: 21
  assemblies:
  - Mathmanbeta
  namespace: Mathmanbeta
  summary: "\nTablica dwuwymiarowa zawierająca macierz opisującą planszę gry\n"
  example: []
  syntax:
    content: public int[, ] Matrix
    return:
      type: System.Int32[,]
    content.vb: Public Matrix As Integer(,)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mathmanbeta.GameBoard.CreateBoardImage(System.Windows.Forms.Form)
  commentId: M:Mathmanbeta.GameBoard.CreateBoardImage(System.Windows.Forms.Form)
  id: CreateBoardImage(System.Windows.Forms.Form)
  parent: Mathmanbeta.GameBoard
  langs:
  - csharp
  - vb
  name: CreateBoardImage(Form)
  nameWithType: GameBoard.CreateBoardImage(Form)
  fullName: Mathmanbeta.GameBoard.CreateBoardImage(System.Windows.Forms.Form)
  type: Method
  source:
    remote:
      path: C:/Users/Kacper/source/repos/Mathmanbeta/Mathmanbeta/Classes/GameBoard.cs
    id: CreateBoardImage
    path: Classes/GameBoard.cs
    startLine: 26
  assemblies:
  - Mathmanbeta
  namespace: Mathmanbeta
  summary: "\nWczytanie i konfiguracja pola graficznego gry\n"
  example: []
  syntax:
    content: public void CreateBoardImage(Form formInstance)
    parameters:
    - id: formInstance
      type: System.Windows.Forms.Form
      description: Komunikacja z formularzem wyświetlającym planszę gry
    content.vb: Public Sub CreateBoardImage(formInstance As Form)
  overload: Mathmanbeta.GameBoard.CreateBoardImage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mathmanbeta.GameBoard.InitialiseBoardMatrix
  commentId: M:Mathmanbeta.GameBoard.InitialiseBoardMatrix
  id: InitialiseBoardMatrix
  parent: Mathmanbeta.GameBoard
  langs:
  - csharp
  - vb
  name: InitialiseBoardMatrix()
  nameWithType: GameBoard.InitialiseBoardMatrix()
  fullName: Mathmanbeta.GameBoard.InitialiseBoardMatrix()
  type: Method
  source:
    remote:
      path: C:/Users/Kacper/source/repos/Mathmanbeta/Mathmanbeta/Classes/GameBoard.cs
    id: InitialiseBoardMatrix
    path: Classes/GameBoard.cs
    startLine: 46
  assemblies:
  - Mathmanbeta
  namespace: Mathmanbeta
  summary: "\nInicjalizacja macierzy opisującej planszę gry\n01 - możliwe przejście dla duchów i pacmana\n10 - ściana przejście zablokowane\n02 - miejsca pojawienia się wyników\n03 - miejsce startowe avatara\n04 - możliwe przejście dla pacmana, nie dla duchów\n11 - możliwe przejście dla duchów, nie dla pacmana\n15 - miejsce startowe duchów\n"
  example: []
  syntax:
    content: public Tuple<int, int> InitialiseBoardMatrix()
    return:
      type: System.Tuple{System.Int32,System.Int32}
      description: Zwraca 2-krotkę zawierającą miejsce startowe pacmana
    content.vb: Public Function InitialiseBoardMatrix As Tuple(Of Integer, Integer)
  overload: Mathmanbeta.GameBoard.InitialiseBoardMatrix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mathmanbeta
  commentId: N:Mathmanbeta
  name: Mathmanbeta
  nameWithType: Mathmanbeta
  fullName: Mathmanbeta
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32[,]
  isExternal: true
  name: Int32[,]
  nameWithType: Int32[,]
  fullName: System.Int32[,]
  nameWithType.vb: Int32(,)
  fullName.vb: System.Int32(,)
  name.vb: Int32(,)
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: Mathmanbeta.GameBoard.CreateBoardImage*
  commentId: Overload:Mathmanbeta.GameBoard.CreateBoardImage
  name: CreateBoardImage
  nameWithType: GameBoard.CreateBoardImage
  fullName: Mathmanbeta.GameBoard.CreateBoardImage
- uid: System.Windows.Forms.Form
  commentId: T:System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: true
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: System.Windows.Forms
  commentId: N:System.Windows.Forms
  isExternal: true
  name: System.Windows.Forms
  nameWithType: System.Windows.Forms
  fullName: System.Windows.Forms
- uid: Mathmanbeta.GameBoard.InitialiseBoardMatrix*
  commentId: Overload:Mathmanbeta.GameBoard.InitialiseBoardMatrix
  name: InitialiseBoardMatrix
  nameWithType: GameBoard.InitialiseBoardMatrix
  fullName: Mathmanbeta.GameBoard.InitialiseBoardMatrix
- uid: System.Tuple{System.Int32,System.Int32}
  commentId: T:System.Tuple{System.Int32,System.Int32}
  parent: System
  definition: System.Tuple`2
  name: Tuple<Int32, Int32>
  nameWithType: Tuple<Int32, Int32>
  fullName: System.Tuple<System.Int32, System.Int32>
  nameWithType.vb: Tuple(Of Int32, Int32)
  fullName.vb: System.Tuple(Of System.Int32, System.Int32)
  name.vb: Tuple(Of Int32, Int32)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
